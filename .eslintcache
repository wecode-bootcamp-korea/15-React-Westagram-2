[{"/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/index.js":"1","/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/Components/Nav/Nav.js":"2","/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/Routes.js":"3","/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/Pages/cecilia/Login/Login.js":"4","/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/Pages/cecilia/Main/Main.js":"5","/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/Pages/cecilia/Main/Comment.js":"6","/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/Pages/cecilia/Main/ActiveStory.js":"7"},{"size":161,"mtime":1606972864040,"results":"8","hashOfConfig":"9"},{"size":2578,"mtime":1606909140128,"results":"10","hashOfConfig":"9"},{"size":1826,"mtime":1606974682475,"results":"11","hashOfConfig":"9"},{"size":4333,"mtime":1607160202862,"results":"12","hashOfConfig":"9"},{"size":8900,"mtime":1607322828918,"results":"13","hashOfConfig":"9"},{"size":925,"mtime":1607183604422,"results":"14","hashOfConfig":"9"},{"size":1131,"mtime":1607323032167,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ybc6q",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/index.js",[],["33","34"],"/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/Components/Nav/Nav.js",[],"/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/Routes.js",[],"/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/Pages/cecilia/Login/Login.js",["35"],"import React from \"react\";\nimport './Login.scss';\n\nclass LoginCecilia extends React.Component {\n  constructor() {  //state 초기화 \n    super();\n    this.state = {\n      id: \"\",\n      pw: \"\",\n      hiddenPw: true\n    };\n  }\n\n  //로그인 함수 \n  // //id\n  // handleIdChange = (e) => {\n  //   this.setState({\n  //     id: e.target.value // 이벤트가 일어나는곳(e)에서 value값을 가져와 state를 변경 시킨다. \n  //   })\n  // }\n\n  // //pw\n  // handlePwChange = (e) => {\n  //   this.setState({\n  //     pw: e.target.value\n  //   })\n  // }\n\n  // id & pw 함수 합치기 \n  handleIdPwChange = (e) => {\n    //비구조화 (구조분해할당)\n    const { id, value } = e.target;  // const {다른부분1,다른부분2} = 겹치는부분;\n    this.setState({\n      [id]: value //state초기화 할때도 id라는 키를 사용했기때문에, 이건 비구조화의 id라는 것을 알려주기위해 대괄호 사용 [id]\n    });\n  }\n\n  //pw보여지는 함수 \n  showPw = () => {\n    this.setState({\n      hiddenPw: !this.state.hiddenPw // !는 반대를 의미한다. \n    });\n  };\n\n  // 아이디 비번 유효성 검사 함수\n  checkValidation = (e) => {\n    e.preventDefault();  //로그인 클릭하고 잘못적었어도 내가 적은 값들이 사라지지 않게 해줌. \n    const { id, pw } = this.state;\n    const checkId = id.includes('@');\n    const checkPw = pw.length >= 4;\n    if (checkId && checkPw === true) {\n      alert(\"미현이 최고! 로그인 성공!\")\n      this.props.history.push('/main-cecilia')\n    }\n    if (!checkId) {\n      alert(\"@없으면 로그인못해요!\");\n    }\n    if (!checkPw) {\n      alert(\"해킹당하지않으려면 4자리 이상으로 설정하시죠!\")\n    }\n    // 1. event default\n    // 2. 구조분해 할당\n    // 3. 불리언으로 변수 설정 (id @포함, pw 4자리 이상)\n    // 4. 조건 맞으면 alert성공, main으로 이동\n    // 5. 조건 (!사용) 하나만 맞는 경우 alert\n  };\n\n  // 로그인 버튼누르면 메인으로 이동 \n  // goToMain = () => {\n  //   this.props.history.push('/main-cecilia');\n  //   // if (response.message === \"valid user\") {\n  //   //   this.props.history.push('/Main');\n  //   // } else {\n  //   //   alert(\"등록되지않은 회원입니다. 회원가입을 해주세요.\"\")\n  //   // }\n  // }\n  render() {\n    //console로 setState가 잘되는지 확인 \n    // console.log(this.state.id, this.state.pw);\n\n    // 비구조화 ! render안에 적어준 애들은 return 아래 애들에게 적용된다. 전역변수로 사용하고 싶다면 컴포넌트 밖에 쓰면됨!\n    const { id, pw, hiddenPw } = this.state;\n    const activeBtn = (id.length && pw.length) > 0;\n\n    return (\n      <div className=\"Login\">\n        <link href=\"https://fonts.googleapis.com/css2?family=Lobster&display=swap\" rel=\"stylesheet\"></link>\n        <header>Instargram</header>\n        <div className=\"loginIdContainer\">\n          <input\n            id=\"id\"  //여기서 \"id\"는 state 초기화 부분의 id와 같은거임 !\n            type=\"text\"\n            placeholder=\"전화번호, 사용자 이름 또는 이메일\"\n            value={id} // 비구조화 데려온거임 원래는 this.state.id\n            onChange={this.handleIdPwChange}  // handleIdChange()라고 적으면 render읽다가 바로 실행해버림. \n          // onChange={()=>this.handleIdChange()} Arrow function은 콜백함수기 때문에 함수호출()까지 적어줘야함\n          />\n        </div>\n        <div className=\"loginPwContainer\">\n          <input\n            id=\"pw\"\n            type={hiddenPw ? \"password\" : \"text\"}  // 삼항연산자 조건 ; {조건 ? true결과 : false결과}\n            placeholder=\"비밀번호\"\n            onChange={this.handleIdPwChange}\n            value={pw} // 비구조화 데려온거임 원래는 this.state.pw\n          />\n          <span className=\"showPw\"\n            onClick={this.showPw}>{hiddenPw ? \"show\" : \"hide\"}\n          </span>\n        </div>\n        <button\n          className={activeBtn ? \"active\" : \"\"}\n          onClick={this.goToMain}\n          onClick={this.checkValidation}\n        >로그인</button>\n\n        <a href=\"https://www.instagram.com/accounts/password/reset/\">아직 회원이 아니신가요?</a>\n      </div >\n\n    );\n  }\n}\n\nexport default LoginCecilia;\n","/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/Pages/cecilia/Main/Main.js",[],"/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/Pages/cecilia/Main/Comment.js",["36","37","38"],"import React from \"react\";\nimport \"./Comment.scss\"\n\n\n// const COMMENTLIST = [\n//   { id: 0, comment: \"안녕 나는 1번!\" },\n//   { id: 1, comment: \"안녕 나는 2번!\" },\n//   { id: 1, comment: \"안녕 나는 3번!\" },\n//   { id: 0, comment: \"안녕 나는 1번!\" },\n//   { id: 1, comment: \"안녕 나는 2번!\" },\n//   { id: 1, comment: \"안녕 나는 3번!\" }\n// ]\n\nclass Comment extends React.Component {\n  render() {\n    const { newComment, id } = this.props\n\n    return (\n      <div className=\"uploadedCommentContainer\" >\n        <ul>\n          {newComment.map((el) => {\n            return (<li>{el.id}  {el.text}</li>)\n          })\n          }\n        </ul>\n      </div >\n    )\n  }\n}\n\nexport default Comment;\n\n\n// {COMMENTLIST.map((el) => {\n//   return (<li>{el.comment}</li>)\n// })}\n\n{/* <li>{this.props.comment}</li> */ }\n\n{/* {this.state.comments.map((el) => {\n              (<li>{el.text}</li>)\n          })} */}","/Users/ce._.cy/Desktop/wecode/15-React-Westagram-2/src/Pages/cecilia/Main/ActiveStory.js",["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":114,"column":11,"nodeType":"47","endLine":114,"endColumn":41},{"ruleId":"48","severity":1,"message":"49","line":16,"column":25,"nodeType":"50","messageId":"51","endLine":16,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":38,"column":1,"nodeType":"54","messageId":"55","endLine":38,"endColumn":39},{"ruleId":"52","severity":1,"message":"53","line":40,"column":1,"nodeType":"54","messageId":"55","endLine":42,"endColumn":18},{"ruleId":"56","severity":1,"message":"57","line":23,"column":17,"nodeType":"58","endLine":23,"endColumn":62},{"ruleId":"56","severity":1,"message":"57","line":24,"column":17,"nodeType":"58","endLine":24,"endColumn":59},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]